{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/components/booking/booking.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './../navbar/Navbar.js';\nimport Footer from './../footer/Footer.js';\nimport nodemailer from 'nodemailer';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport GoogleMap from './../map/Map.js';\nimport Form from \"react-bootstrap/Form\";\nimport './booking.css';\nexport default class booking extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allScreening: [],\n      email: \"\",\n      screenTime: \"\",\n      screenId: \"\",\n      chosenScreening: [],\n      chosenSeats: {},\n      price: 0\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.postBooking = event => {\n      event.preventDefault();\n      const title = this.props.match.params.id;\n      console.log(this.state.screenTime);\n      console.log(this.state.email);\n      console.log(title);\n      axios.post(`http://localhost:5000/api/bookings`, {\n        theaterId: \"big screen\",\n        filmTitle: this.props.match.params.id,\n        name: this.state.email,\n        screeningTime: this.states.chosenScreening.screenTime,\n        totalPrice: this.state.chosenSeats.length * 9.99\n      }).then(res => {\n        this.setState({\n          name: \"\",\n          body: \"\",\n          email: \"\"\n        });\n      });\n    };\n\n    this.getSeats = screenID => {\n      axios.get(`http://localhost:5000/api/screenings/byId/${screenID}`).then(res => {\n        const chosenScreening = res.data;\n        this.setState({\n          chosenScreening\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    const title = this.props.match.params.id;\n    axios.get(`http://localhost:5000/api/screenings/${title}`).then(res => {\n      const allScreening = res.data;\n      this.setState({\n        allScreening\n      });\n    });\n  }\n\n  getChckeboxValue(event) {\n    const chosenSeats = this.state.chosenSeats;\n    chosenSeats[event.target.name] = event.target.value;\n    this.setState({\n      chosenSeats\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      style: {\n        backgroundColor: \"black\",\n        color: \"white\",\n        paddingTop: \"80px\",\n        paddingBottom: \"80px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      style: {\n        paddingLeft: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.postBooking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"name@example.com\",\n      name: \"email\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), \"Select a screen time:\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, this.state.allScreening.map(screen => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, screen.screeningTime, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getSeats(screen._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 56\n      }\n    }, \"Get seats\")))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, this.state.chosenScreening.length > 0 && this.state.chosenScreening[0].seats.map((seat, index1) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"plane\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        class: \"cabin fuselage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        class: \"row row--1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        class: \"seats\",\n        type: \"A\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 53\n        }\n      }, seat.map((s, index) => /*#__PURE__*/React.createElement(\"li\", {\n        class: \"seat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        inline: true,\n        label: s,\n        id: `${index1}.${index}`,\n        value: `seats.${index1}.${index}`,\n        name: \"chosenSeats\",\n        onClick: this.getChckeboxValue.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 65\n        }\n      })))))));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-secondary btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Make Booking\"))))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/components/booking/booking.js"],"names":["React","Component","Link","Navbar","Footer","nodemailer","axios","Container","Row","Col","Carousel","GoogleMap","Form","booking","state","allScreening","email","screenTime","screenId","chosenScreening","chosenSeats","price","handleChange","event","setState","target","name","value","console","log","postBooking","preventDefault","title","props","match","params","id","post","theaterId","filmTitle","screeningTime","states","totalPrice","length","then","res","body","getSeats","screenID","get","data","componentDidMount","getChckeboxValue","render","backgroundColor","color","paddingTop","paddingBottom","paddingLeft","map","screen","_id","seats","seat","index1","s","index","bind"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './../navbar/Navbar.js'\nimport Footer from './../footer/Footer.js'\nimport nodemailer from 'nodemailer';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport GoogleMap from './../map/Map.js'\nimport Form from \"react-bootstrap/Form\";\nimport './booking.css';\n\nexport default class booking extends Component{\n\n    state = {\n        allScreening: [],\n        email: \"\",\n        screenTime: \"\",\n        screenId: \"\",\n        chosenScreening: [],\n        chosenSeats: {},\n        price: 0,\n      }\n\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        const title = (this.props.match.params.id);\n        axios.get(`http://localhost:5000/api/screenings/${title}`)\n        .then(res => {\n            const allScreening = res.data;\n            this.setState({ allScreening });\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n        console.log(this.state)\n\n      };\n\n\n\n      postBooking = (event) => {\n        event.preventDefault();\n        const title = this.props.match.params.id;\n        console.log(this.state.screenTime)\n        console.log(this.state.email)\n        console.log(title)\n        axios\n        .post(`http://localhost:5000/api/bookings`, {\n                theaterId: \"big screen\",\n                filmTitle: this.props.match.params.id,\n                name: this.state.email,\n                screeningTime: this.states.chosenScreening.screenTime,\n                totalPrice : (this.state.chosenSeats.length * 9.99),\n                \n           })\n          .then((res) => {\n            this.setState({\n              name: \"\",\n              body: \"\",\n              email: \"\",\n            });\n          });\n      };\n\n      getSeats = (screenID) => {\n        axios.get(`http://localhost:5000/api/screenings/byId/${screenID}`)\n        .then(res => {\n            const chosenScreening = res.data;\n            this.setState({ chosenScreening });\n        })\n      };\n\n      getChckeboxValue(event) {\n          const chosenSeats = this.state.chosenSeats;\n          chosenSeats[event.target.name] = event.target.value\n        this.setState({ chosenSeats})\n    }\n\n    render(){\n        return(\n            <div>\n                <Navbar></Navbar>\n                <div style={{ backgroundColor: \"black\", color: \"white\" }}>\n                <div\n                class=\"container\"\n                style={{\n                    backgroundColor: \"black\",\n                    color: \"white\",\n                    paddingTop: \"80px\",\n                    paddingBottom: \"80px\",\n                }}\n                >\n                <div class=\"row\" style={{ paddingLeft: \"\" }}>\n                    <Form onSubmit={this.postBooking}>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"name@example.com\" name=\"email\" onChange={this.handleChange} value={this.state.email} required />\n                    </Form.Group>\n                    Select a screen time:\n                    <ul>\n                    {\n                        this.state.allScreening.map(screen\t=>\n                            <li>\n                                {screen.screeningTime} <button onClick={() => this.getSeats(screen._id)}>Get seats</button>\n                            </li>\n                        )\n                    }\n                    </ul>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        \n                        {\n                        this.state.chosenScreening.length>0 && this.state.chosenScreening[0].seats.map((seat, index1) => {\n                                    return(\n                                        <div class=\"plane\">\n                                            <ol class=\"cabin fuselage\">\n                                                <li class=\"row row--1\">\n                                                    <ol class=\"seats\" type=\"A\">\n                                                        {seat.map((s, index)=> \n                                                            <li class=\"seat\">\n                                                                <Form.Check inline label={s} id={`${index1}.${index}`} value={`seats.${index1}.${index}`} name=\"chosenSeats\" onClick={this.getChckeboxValue.bind(this)} />\n                                                            </li>\n                                                        )}\n                                                    </ol>\n                                                </li>\n                                            </ol>\n                                        </div>\n                                        )\n                            }\n                        )\n                    }\n                    </Form.Group>\n                    <button type=\"submit\" class=\"btn btn-secondary btn-lg\">\n                        Make Booking\n                    </button>\n                    </Form>\n                </div>\n                </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}