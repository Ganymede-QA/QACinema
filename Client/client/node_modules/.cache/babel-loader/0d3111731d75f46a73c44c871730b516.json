{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst express = require('express');\n\nconst bodyParser = require(\"body-parser\");\n\nconst nodemailer = require('nodemailer');\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n})), document.getElementById('root'));\nconst app = express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(cors());\napp.get('/', () => {\n  res.send('welcome to my forma');\n});\napp.post('/api/forma', (req, res) => {\n  let data = req.body;\n  let smtpTransport = nodemailer.createTransport({\n    service: 'Gmail',\n    port: 465,\n    auth: {\n      user: 'odkolas@gmail.com',\n      pass: \"galopoula@21@21\"\n    }\n  });\n  let mailOptions = {\n    from: data.email,\n    to: 'odkolas@gmail.com',\n    subject: `Message from ${data.name}`,\n    html: `\n    \n    <h3>Informations</h3>\n    <ul>\n      <li>Name: ${data.name}</li>\n      <li>Lastname: ${data.lastname}</li>\n      <li>Email: ${data.email}</li>\n    \n    </ul> \n    <h3>Message</h3> \n    <p>${data.message}</p>  \n    \n    `\n  };\n  smtpTransport.sendMail(mailOptions, (error, response) => {\n    if (error) {\n      res.send(error);\n    } else {\n      res.send('Success');\n    }\n\n    smtpTransport.close();\n  });\n});\nconst PORT = process.env.PORT || 3001;\napp.listen(PORT, () => {\n  console.log(`server listening at port ${PORT}`);\n}); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","express","require","bodyParser","nodemailer","render","document","getElementById","app","use","json","urlencoded","extended","cors","get","res","send","post","req","data","body","smtpTransport","createTransport","service","port","auth","user","pass","mailOptions","from","email","to","subject","name","html","lastname","message","sendMail","error","response","close","PORT","process","env","listen","console","log","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEAJ,QAAQ,CAACO,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,EAIAC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJA;AAMA,MAAMC,GAAG,GAACP,OAAO,EAAjB;AAEAO,GAAG,CAACC,GAAJ,CAAQN,UAAU,CAACO,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQN,UAAU,CAACQ,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQI,IAAI,EAAZ;AAGAL,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,MAAI;AACbC,EAAAA,GAAG,CAACC,IAAJ,CAAS,qBAAT;AACH,CAFD;AAIAR,GAAG,CAACS,IAAJ,CAAS,YAAT,EAAuB,CAACC,GAAD,EAAKH,GAAL,KAAW;AAElC,MAAII,IAAI,GAACD,GAAG,CAACE,IAAb;AAEA,MAAIC,aAAa,GAAGjB,UAAU,CAACkB,eAAX,CAA2B;AAC5CC,IAAAA,OAAO,EAAC,OADoC;AAE5CC,IAAAA,IAAI,EAAC,GAFuC;AAG5CC,IAAAA,IAAI,EAAC;AACJC,MAAAA,IAAI,EAAC,mBADD;AAEJC,MAAAA,IAAI,EAAC;AAFD;AAHuC,GAA3B,CAApB;AAUA,MAAIC,WAAW,GAAC;AACZC,IAAAA,IAAI,EAACV,IAAI,CAACW,KADE;AAEZC,IAAAA,EAAE,EAAC,mBAFS;AAGZC,IAAAA,OAAO,EAAE,gBAAeb,IAAI,CAACc,IAAK,EAHtB;AAIZC,IAAAA,IAAI,EAAE;;;;kBAIQf,IAAI,CAACc,IAAK;sBACNd,IAAI,CAACgB,QAAS;mBACjBhB,IAAI,CAACW,KAAM;;;;SAIrBX,IAAI,CAACiB,OAAQ;;;AAdN,GAAhB;AAoBAf,EAAAA,aAAa,CAACgB,QAAd,CAAuBT,WAAvB,EAAoC,CAACU,KAAD,EAAQC,QAAR,KAAmB;AAEnD,QAAGD,KAAH,EAAS;AACLvB,MAAAA,GAAG,CAACC,IAAJ,CAASsB,KAAT;AACH,KAFD,MAGI;AACAvB,MAAAA,GAAG,CAACC,IAAJ,CAAS,SAAT;AACH;;AAEDK,IAAAA,aAAa,CAACmB,KAAd;AACH,GAVD;AAgBC,CAlDD;AAqDA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAkB,IAA/B;AAEAjC,GAAG,CAACoC,MAAJ,CAAWH,IAAX,EAAgB,MAAI;AAChBI,EAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BL,IAAK,EAA7C;AAEH,CAHD,E,CAKA;AACA;AACA;;AACAzC,aAAa,CAAC+C,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst express = require('express');\nconst bodyParser = require(\"body-parser\");\nconst nodemailer = require('nodemailer');\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root')\n);\nconst app=express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(cors());\n\n\napp.get('/', ()=>{\n    res.send('welcome to my forma');\n})\n\napp.post('/api/forma', (req,res)=>{\n\nlet data=req.body;\n\nlet smtpTransport = nodemailer.createTransport({\n   service:'Gmail' ,\n   port:465,\n   auth:{\n    user:'odkolas@gmail.com',\n    pass:\"galopoula@21@21\"\n   }\n});\n\n\nlet mailOptions={\n    from:data.email,\n    to:'odkolas@gmail.com',\n    subject:`Message from ${data.name}`,\n    html:`\n    \n    <h3>Informations</h3>\n    <ul>\n      <li>Name: ${data.name}</li>\n      <li>Lastname: ${data.lastname}</li>\n      <li>Email: ${data.email}</li>\n    \n    </ul> \n    <h3>Message</h3> \n    <p>${data.message}</p>  \n    \n    `\n\n};\n\nsmtpTransport.sendMail(mailOptions, (error, response)=>{\n  \n    if(error){\n        res.send(error)\n    }\n    else{\n        res.send('Success')\n    }\n\n    smtpTransport.close();\n})\n\n\n\n\n\n})\n\n\nconst PORT = process.env.PORT||3001;\n\napp.listen(PORT,()=>{\n    console.log(`server listening at port ${PORT}`);\n    \n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}