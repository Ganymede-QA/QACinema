{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/components/booking/booking.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './../navbar/Navbar.js';\nimport Footer from './../footer/Footer.js';\nimport nodemailer from 'nodemailer';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport GoogleMap from './../map/Map.js';\nimport Form from \"react-bootstrap/Form\";\nexport default class booking extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allScreening: [],\n      email: \"\",\n      screenTime: \"\",\n      screenId: \"\",\n      chosenScreening: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.postBooking = event => {\n      event.preventDefault();\n      const title = this.props.match.params.id;\n      console.log(this.state.screenTime);\n      console.log(this.state.email);\n      console.log(title); // axios\n      //   .post(`http://localhost:5000/api/comments`, {\n      //     commentBody: this.state.body,\n      //     name: this.state.name,\n      //     email: this.state.email,\n      //     movieId: ID,\n      //   })\n      //   .then((res) => {\n      //     this.setState({\n      //       name: \"\",\n      //       body: \"\",\n      //       email: \"\",\n      //     });\n      //   });\n    };\n\n    this.getSeats = screenID => {\n      this.setState({\n        screenId: screenID\n      });\n      axios.get(`http://localhost:5000/api/screenings/byId/${this.state.screenId}`).then(res => {\n        const chosenScreening = res.data;\n        this.setState({\n          chosenScreening\n        });\n      });\n      console.log(this.state.screenId);\n      console.log(this.state.chosenScreening);\n    };\n\n    this.getArray = () => {\n      var rows = this.props.columns.map(function (item, i) {\n        var entry = item.map(function (element, j) {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: j,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }\n          }, \" \", element, \" \");\n        });\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }, \" \", entry, \" \");\n      });\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table-hover table-striped table-bordered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, rows));\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    const title = this.props.match.params.id;\n    axios.get(`http://localhost:5000/api/screenings/${title}`).then(res => {\n      const allScreening = res.data;\n      this.setState({\n        allScreening\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.postBooking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"name@example.com\",\n      name: \"email\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Select a screen time\"), this.state.allScreening.map(screen => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, screen.screeningTime), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getSeats(screen._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 57\n      }\n    }, \"Get seats\"))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Select seats\"), this.state.chosenScreening.map(screen => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, screen.seats[1][1]))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Select a screen time\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"screenTime\",\n      onChange: this.handleChange,\n      value: this.state.screenTime,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"Select\"), this.state.allScreening.map(screen => /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, screen.screeningTime)))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-secondary btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Make Booking\")), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/components/booking/booking.js"],"names":["React","Component","Link","Navbar","Footer","nodemailer","axios","Container","Row","Col","Carousel","GoogleMap","Form","booking","state","allScreening","email","screenTime","screenId","chosenScreening","handleChange","event","setState","target","name","value","postBooking","preventDefault","title","props","match","params","id","console","log","getSeats","screenID","get","then","res","data","getArray","rows","columns","map","item","i","entry","element","j","componentDidMount","render","screen","screeningTime","_id","seats"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './../navbar/Navbar.js'\nimport Footer from './../footer/Footer.js'\nimport nodemailer from 'nodemailer';\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport GoogleMap from './../map/Map.js'\nimport Form from \"react-bootstrap/Form\";\n\nexport default class booking extends Component{\n\n    state = {\n        allScreening: [],\n        email: \"\",\n        screenTime: \"\",\n        screenId: \"\",\n        chosenScreening: [],\n      }\n\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        const title = (this.props.match.params.id);\n        axios.get(`http://localhost:5000/api/screenings/${title}`)\n        .then(res => {\n            const allScreening = res.data;\n            this.setState({ allScreening });\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n\n      };\n\n      postBooking = (event) => {\n        event.preventDefault();\n        const title = this.props.match.params.id;\n        console.log(this.state.screenTime)\n        console.log(this.state.email)\n        console.log(title)\n        // axios\n        //   .post(`http://localhost:5000/api/comments`, {\n        //     commentBody: this.state.body,\n        //     name: this.state.name,\n        //     email: this.state.email,\n        //     movieId: ID,\n        //   })\n        //   .then((res) => {\n        //     this.setState({\n        //       name: \"\",\n        //       body: \"\",\n        //       email: \"\",\n        //     });\n        //   });\n      };\n\n      getSeats = (screenID) => {\n        this.setState({ screenId: screenID});\n        axios.get(`http://localhost:5000/api/screenings/byId/${this.state.screenId}`)\n        .then(res => {\n            const chosenScreening = res.data;\n            this.setState({ chosenScreening });\n        })\n        console.log(this.state.screenId)\n        console.log(this.state.chosenScreening)\n\n      };\n\n      getArray = () => {\n        var rows = this.props.columns.map(function (item, i){\n            var entry = item.map(function (element, j) {\n                return ( \n                    <td key={j}> {element} </td>\n                    );\n            });\n            return (\n                <tr key={i}> {entry} </tr>\n             );\n        });\n        return (\n            <table className=\"table-hover table-striped table-bordered\">\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        );\n      };\n\n    render(){\n        return(\n            <div>\n                <Navbar></Navbar>\n                <Form onSubmit={this.postBooking}>\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"name@example.com\" name=\"email\" onChange={this.handleChange} value={this.state.email} required />\n                </Form.Group>\n                <h3>Select a screen time</h3>\n                {\n                    this.state.allScreening.map(screen\t=>\n                    <div>\n                        <h4>{screen.screeningTime}</h4> <button onClick={() => this.getSeats(screen._id)}>Get seats</button>\n                    </div>\n                    )\n                }\n                <h3>Select seats</h3>\n                {\n                    this.state.chosenScreening.map(screen\t=>\n                        \n                        <div>\n                            <h5>{screen.seats[1][1]}</h5>\n                        </div>\n                    )\n                }\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Select a screen time</Form.Label>\n                    <Form.Control as=\"select\" name=\"screenTime\" onChange={this.handleChange} value={this.state.screenTime} required>\n                        <option>Select</option>\n                        {\n                        this.state.allScreening.map(screen\t=>\n                            <option>{screen.screeningTime}</option>\n                        )\n                        }\n                    </Form.Control>\n                </Form.Group>\n                <button type=\"submit\" class=\"btn btn-secondary btn-lg\">\n                    Make Booking\n                  </button>\n                </Form>\n                <Footer></Footer>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}