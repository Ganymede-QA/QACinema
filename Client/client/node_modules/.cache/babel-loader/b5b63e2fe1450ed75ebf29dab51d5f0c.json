{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/Search.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Button from \"@material-ui/core/Button\";\n\nrequire(\"es6-promise\").polyfill();\n\nrequire(\"isomorphic-fetch\");\n\nexport default function Searchbar() {\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [movieid, setId] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/movies\").then(response => response.json()).then(json => setData(json));\n  }, []);\n\n  function search(rows) {\n    return rows.filter(row => row.title.toLowerCase().indexOf(q) > -1);\n  }\n\n  function handleInputChange(event, value) {\n    // debugger\n    console.log(value);\n    data.filter(movie => movie.title === value).forEach(function (movie) {\n      console.log(movie._id);\n      setId(movie._id);\n    });\n  }\n\n  console.log(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\" // options={data.map(movie=>movie._id)}\n    ,\n    options: data,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300,\n      backgroundColor: \"white\"\n    },\n    onInputChange: handleInputChange,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Search movies\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    href: `/profile/${movieid}`,\n    style: {\n      backgroundColor: \"white\",\n      color: \"black\",\n      paddingTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Search\"));\n}","map":{"version":3,"sources":["/Users/ahmadnaeem/Desktop/QACinema/Client/client/src/Search.js"],"names":["React","useState","useEffect","TextField","Autocomplete","Button","require","polyfill","Searchbar","data","setData","q","setQ","movieid","setId","fetch","then","response","json","search","rows","filter","row","title","toLowerCase","indexOf","handleInputChange","event","value","console","log","movie","forEach","_id","option","width","backgroundColor","params","color","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB;;AACAD,OAAO,CAAC,kBAAD,CAAP;;AAEA,eAAe,SAASE,SAAT,GAAqB;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,CAAD,EAAIC,IAAJ,IAAYX,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACY,OAAD,EAAUC,KAAV,IAAmBb,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUR,OAAO,CAACQ,IAAD,CAFzB;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,WAAOA,IAAI,CAACC,MAAL,CAAaC,GAAD,IAASA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCd,CAAhC,IAAqC,CAAC,CAA3D,CAAP;AACD;;AAED,WAASe,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AACvC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAnB,IAAAA,IAAI,CACDY,MADH,CACWU,KAAD,IAAWA,KAAK,CAACR,KAAN,KAAgBK,KADrC,EAEGI,OAFH,CAEW,UAAUD,KAAV,EAAiB;AACxBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACE,GAAlB;AACAnB,MAAAA,KAAK,CAACiB,KAAK,CAACE,GAAP,CAAL;AACD,KALH;AAMD;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,EAAE,EAAC,gBADL,CAEE;AAFF;AAGE,IAAA,OAAO,EAAEA,IAHX;AAIE,IAAA,cAAc,EAAGyB,MAAD,IAAYA,MAAM,CAACX,KAJrC;AAKE,IAAA,KAAK,EAAE;AAAEY,MAAAA,KAAK,EAAE,GAAT;AAAeC,MAAAA,eAAe,EAAE;AAAhC,KALT;AAME,IAAA,aAAa,EAAEV,iBANjB;AAOE,IAAA,WAAW,EAAGW,MAAD,iBACX,oBAAC,SAAD,oBACMA,MADN;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,IAAI,EAAG,YAAWxB,OAAQ,EAAtE;AAAyE,IAAA,KAAK,EAAE;AAACuB,MAAAA,eAAe,EAAC,OAAjB;AAA0BE,MAAAA,KAAK,EAAC,OAAhC;AAAyCC,MAAAA,UAAU,EAAE;AAArD,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF;AAsBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport Button from \"@material-ui/core/Button\";\n\nrequire(\"es6-promise\").polyfill();\nrequire(\"isomorphic-fetch\");\n\nexport default function Searchbar() {\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [movieid, setId] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/movies\")\n      .then((response) => response.json())\n      .then((json) => setData(json));\n  }, []);\n\n  function search(rows) {\n    return rows.filter((row) => row.title.toLowerCase().indexOf(q) > -1);\n  }\n\n  function handleInputChange(event, value) {\n    // debugger\n    console.log(value);\n    data\n      .filter((movie) => movie.title === value)\n      .forEach(function (movie) {\n        console.log(movie._id);\n        setId(movie._id);\n      });\n  }\n  console.log(data);\n\n  return (\n    <div>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        // options={data.map(movie=>movie._id)}\n        options={data}\n        getOptionLabel={(option) => option.title}\n        style={{ width: 300,  backgroundColor: \"white\"}}\n        onInputChange={handleInputChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search movies\"\n            variant=\"standard\"\n          />\n        )}\n      />\n      <Button variant=\"contained\" color=\"primary\" href={`/profile/${movieid}`} style={{backgroundColor:\"white\", color:\"black\", paddingTop: \"10px\"}}>\n        Search\n      </Button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}